function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = []
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
import{_ as b,L as a,B as r}from"./index-DaF-xv0G.js";import{B as c}from"./button-C3bQ6Pjp.js";import{L as f}from"./logout-DUfBkgJ8.js";const p=await b(()=>import("./wordCollectionLevel1-DAd_RTnK.js"),__vite__mapDeps([]));class m{rounds=[];get dataRounds(){return m.isData(p)&&(this.rounds=p.rounds),this.rounds}static isData(t){return t!=null}}const d=new m;class w{currentIndexPicture=0;currentIndexPhrase=0;widthPicture=700;mainPicture="";widthIndent=10;countIndent=2;widthGap=0;countLines=10;heigthOfLine=40;moveXCurrentPosition=0;moveXPositions=[];moveYCurrentPosition=0;moveYPositions=[];hints={translate:a.getHints("translate_hint"),audio:a.getHints("audio_hint"),picture:a.getHints("picture_hint")};constructor(){const t=new Image;t.src=`src/app/data/images/${this.mainPicture}`,this.heigthOfLine=this.widthPicture/t.width*t.height/this.countLines||this.heigthOfLine,this.positionsCards(),this.setMainPicture()}textHint(t=this.currentIndexPhrase){return d.dataRounds[this.currentIndexPicture].words[t].textExampleTranslate}currentAudio(t=this.currentIndexPhrase){return d.dataRounds[this.currentIndexPicture].words[t].audioExample}currentPhrase(t=this.currentIndexPhrase){return d.dataRounds[this.currentIndexPicture].words[t].textExample}currentMainPicture(t=this.currentIndexPicture){return d.dataRounds[t].levelData.imageSrc}get countOfLines(){return this.countLines}get heigthOfLineValue(){return this.heigthOfLine}set indent(t){this.widthIndent=t}setMainPicture(){this.mainPicture=d.dataRounds[this.currentIndexPicture].levelData.imageSrc}numWordsInPhrase(t=this.currentIndexPhrase){return d.dataRounds[this.currentIndexPicture].words[t].textExample.split(" ").length}numSymbolsInPhrase(t=this.currentIndexPhrase){return d.dataRounds[this.currentIndexPicture].words[t].textExample.split(" ").join("").length}positionsCards=()=>{const t=this.currentPhrase(this.currentIndexPhrase).split(" "),e=[],n=[];for(let s=0;s<t.length;s+=1)e.push(this.moveXCurrentPosition),this.moveXCurrentPosition+=this.widthCard(t[s]);this.moveXPositions=e;for(let s=0;s<this.countLines;s+=1)n.push(this.moveYCurrentPosition),this.moveYCurrentPosition+=this.heigthOfLine;this.moveYPositions=n};widthCard(t){return(this.widthPicture-this.numWordsInPhrase()*this.countIndent*this.widthIndent-this.widthGap*(this.numWordsInPhrase()-1))/this.numSymbolsInPhrase()*t.length+this.countIndent*this.widthIndent}}const i=new w;class x{play(t,e){const n="https://github.com/rolling-scopes-school/rss-puzzle-data/raw/main/",s=new Audio(n+i.currentAudio(t));s.play().then(()=>{s.addEventListener("ended",()=>{e()})}).catch(()=>{throw new Error("не удалось воспроизвести аудиофайл")})}}const L=new x;class C extends r{constructor(t,e){super({tagName:"div",className:"game-header"}),this.onClickTranslate=t,this.onClickBackground=e;const n=a.getHints("translate_hint"),s=a.getHints("picture_hint"),u=a.getHints("audio_hint"),o=this.createButtonTranslate(n),l=this.createButtonBackground(s),h=this.createButtonAudio(u);this.toolbarSound=this.createMute(u),this.hintTranslate=new r({tagName:"div",className:"toolbar-hints"},o,l,h),this.appendChildren([this.hintTranslate,this.toolbarSound])}hintTranslate;toolbarSound;isSound=!1;createMute=t=>(this.toolbarSound=new r({tagName:"div",className:"toolbar-sound"},new c({className:"icon-button-sound",textContent:"",onClick:e=>{this.isSound||(e.preventDefault(),this.toolbarSound.addClass("active"),this.isSound=!0,L.play(i.currentIndexPhrase,()=>{this.toolbarSound.removeClass("active"),this.isSound=!1}))}})),this.toolbarSound.toggleClass("show",t),this.toolbarSound);createButtonTranslate(t){const e=new r({tagName:"div",className:"hint-translate"},new c({className:"icon-button",textContent:"",onClick:n=>{n.preventDefault(),this.toogleHintTranslate(e),this.onClickTranslate(i.hints)}}));return e.toggleClass("hint-on",t),e}toogleHintTranslate(t){const e=a.getHints("translate_hint");a.setItem("translate_hint",!e),t.toggleClass("hint-on"),i.hints.translate=!e}createButtonBackground(t){const e=new r({tagName:"div",className:"hint-background"},new c({className:"icon-button",onClick:n=>{n.preventDefault(),this.toogleHintBackground(e),this.onClickBackground(i.hints)}}));return e.toggleClass("hint-on",t),e}toogleHintBackground(t){const e=a.getHints("picture_hint");a.setItem("picture_hint",!e),t.toggleClass("hint-on"),i.hints.picture=!e}createButtonAudio(t){const e=new r({tagName:"div",className:"hint-audio"},new c({className:"icon-button",onClick:n=>{n.preventDefault(),this.toogleHintAudio(e),this.toolbarSound.toggleClass("show")}}));return e.toggleClass("hint-on",t),e}toogleHintAudio(t){const e=a.getHints("audio_hint");a.setItem("audio_hint",!e),t.toggleClass("hint-on"),i.hints.audio=!e}}class N extends r{onClick;positionYOnset=12;constructor(t,e,n,s,u,o,l,h){super({tagName:"div",className:"tile-card"}),this.append(this.createCard(t,e,n,s,u,o,l)),this.onClick=h,this.onClick&&this.addListener("click",()=>{this.onClick(this.getNode())})}createCard(t,e,n,s,u,o,l){const h=new r({tagName:"div",className:`tile-${e} card`},new r({tagName:"div",className:"word",textContent:t},this.createAfter(e,u,o,n,l)));let P="";return s&&(P=`height:${s}px`),h.setAttribute("style",`width:${n}px;${P};`),l&&(h.getNode().style.backgroundImage=`url(./src/app/data/images/${i.mainPicture})`,h.getNode().style.backgroundPosition=`-${u}px  -${o}px`),h.setAttribute("data",`${e}`),h}createAfter(t,e,n,s,u){const o=new r({tagName:"span",className:"after"});t===i.numWordsInPhrase(i.currentIndexPhrase)-1&&o.setAttribute("style","backgroundColor: #fff; left:0");const l=e+s,h=n+this.positionYOnset;return u&&(o.getNode().style.backgroundImage=`url(./src/app/data/images/${i.mainPicture})`,o.getNode().style.backgroundPosition=`-${l}px  -${h}px`),o}}class k extends r{zIndexCoefficient=10;fieldPicture;fieldLines=[];linePuzzles;gameLine;hintLine;buttonContinue;buttonCheck;buttonAutofill;buttonWrapper;textHint;headerPage;showBackgroundOnCard=!0;constructor(){super({tagName:"div",className:"game-wrapper"}),this.fieldPicture=this.createFieldPicture(),this.linePuzzles=this.createLinePuzzles(),this.buttonContinue=this.createButtonContinue(),this.buttonCheck=this.createButtonCheck(),this.buttonAutofill=this.createButtonAutofill(),this.hintLine=this.createLineHint(),this.headerPage=new C(this.changeHintTranslate,this.changeHintsBackground),this.buttonWrapper=new r({tagName:"div",className:"button-wrapper"},this.buttonContinue,this.buttonCheck,this.buttonAutofill),this.inputPuzzles(),this.appendChildren([this.headerPage,this.fieldPicture,this.hintLine,this.linePuzzles,this.buttonWrapper,new f])}changeHintTranslate=t=>{console.log(t),t.translate?this.hintLine.addClass("show"):this.hintLine.removeClass("show")};changeHintsBackground=t=>{console.log(t)};createFieldPicture(){return new r({tagName:"div",className:"game-field"},...this.generateLinesOfField())}createLinePuzzles(){return this.gameLine=new r({tagName:"div",className:"game-line"}),this.gameLine}inputPuzzles(){const t=this.generatePuzzles();for(let e=0;e<t.length;e+=1)t[e].getNode().style.zIndex=`${i.numWordsInPhrase(i.currentIndexPhrase)*this.zIndexCoefficient-this.zIndexCoefficient*e}`,this.gameLine?.append(t[e])}generatePuzzles(){const t=i.currentPhrase(i.currentIndexPhrase);return console.log(this.showBackgroundOnCard),t.split(" ").map((e,n)=>new N(e,n,i.widthCard(e),i.heigthOfLine,i.moveXPositions[n],i.moveYPositions[i.currentIndexPhrase],this.showBackgroundOnCard,this.clickPuzzle)).sort(()=>Math.random()-.5)}generateLinesOfField(){this.fieldLines=[];for(let t=0;t<i.countOfLines;t+=1){const e=new r({tagName:"div",className:"field-line"},...this.generateTilesOfLine(t));e.setAttribute("style",`height:${i.heigthOfLine}px`),this.fieldLines.push(e)}return this.fieldLines}generateTilesOfLine(t){const e=[];for(let n=0;n<i.numWordsInPhrase(t);n+=1){const s=new r({tagName:"div",className:"tile-card empty-card"});s.addListener("click",()=>{this.clickPuzzleLine(s)}),e.push(s)}return e}createButtonContinue(){return new c({className:"form-button game-button hide",textContent:"Continue",onClick:t=>{t.preventDefault(),this.moveToNextRound()}})}createButtonCheck(){return new c({className:"form-button game-button hide",textContent:"Check",onClick:t=>{t.preventDefault(),this.checkRightPhrase()}})}createButtonAutofill(){return new c({className:"form-button game-button game-button-autofill",textContent:"I don't no ;(",onClick:t=>{t.preventDefault(),this.autofillCards()}})}createHintTranslateText=()=>new r({tagName:"span",className:"text-hint",textContent:i.textHint(i.currentIndexPhrase)});createLineHint(){const t=new r({tagName:"img",className:"icon-hint"});t.setAttribute("src","./src/assets/images/hint.png"),t.setAttribute("alt",""),this.textHint=new r({tagName:"div",className:"text-hint-wrap"},this.createHintTranslateText());const e=new r({tagName:"div",className:"game-field-hint show"},new r({tagName:"div",className:"icon-hint"},t),this.textHint);return a.getHints("translate_hint")||e.removeClass("show"),e}clickPuzzleLine=t=>{const e=t.getNode().children[0];if(e){for(let n=0;n<this.linePuzzles.getNode().children.length;n+=1)if(this.linePuzzles.getNode().children[n].classList.contains("show-empty-card")){this.linePuzzles.getNode().children[n].append(e),this.linePuzzles.getNode().children[n].classList.remove("show-empty-card"),t.getNode().classList.add("empty-card"),t.getNode().removeAttribute("style"),t.getNode().classList.remove("error");break}}this.buttonCheck.addClass("hide")};clickPuzzle=t=>{const e=t.children[0],n=this.fieldLines[i.currentIndexPhrase].getNode().children;if(e){for(let s=0;s<n.length;s+=1)if(n[s].classList.contains("empty-card")){n[s].setAttribute("border","none"),e instanceof HTMLElement&&n[s].setAttribute("style",`z-index: ${i.numWordsInPhrase(i.currentIndexPhrase)*this.zIndexCoefficient-this.zIndexCoefficient*s};
            width: ${e.style.width}, height: ${e.style.height}`),t.classList.add("show-empty-card"),n[s].classList.remove("empty-card"),n[s].append(e);break}}this.checkPhraseFull()};checkPhraseFull(){const t=this.fieldLines[i.currentIndexPhrase].getNode().children;let e=0;for(let n=0;n<t.length;n+=1)t[n].textContent&&(e+=1);e===i.numWordsInPhrase(i.currentIndexPhrase)&&this.buttonCheck.removeClass("hide")}checkRightPhrase(){const t=this.fieldLines[i.currentIndexPhrase].getNode().children;let e="",n=!1;for(let s=0;s<t.length;s+=1)Number(t[s].children[0].getAttribute("data"))!==s?(t[s].classList.add("error"),n=!0):t[s].classList.remove("error"),t[s].textContent&&(e+=`${t[s].textContent} `);e.trim(),e.trim()===i.currentPhrase(i.currentIndexPhrase)&&!n&&(this.buttonContinue.removeClass("hide"),this.buttonCheck.addClass("hide"),this.fieldLines[i.currentIndexPhrase].addClass("block"),i.hints.translate||this.textHint?.addClass("show"),i.hints.audio||this.headerPage.toolbarSound.addClass("show"))}moveToNextRound(){this.buttonAutofill.removeClass("hide"),this.textHint?.removeClass("show"),i.hints.audio||this.headerPage.toolbarSound.removeClass("show"),i.currentIndexPhrase===i.countOfLines-1?this.moveToNextPicture():(i.currentIndexPhrase+=1,this.gameLine&&(this.gameLine.getChildren().forEach(t=>{t.getNode().classList.contains("show-empty-card")&&this.gameLine?.removeChild(t)}),this.gameLine.setHTML(""),this.textHint?.destroyChildren(),i.moveXCurrentPosition=0,i.moveXPositions=[],i.moveYCurrentPosition=0,i.moveYPositions=[],i.positionsCards(),this.generatePuzzles(),this.inputPuzzles(),this.textHint?.append(this.createHintTranslateText()),this.buttonContinue.addClass("hide"),this.buttonCheck.addClass("hide")))}moveToNextPicture(){i.currentIndexPhrase=0,i.currentIndexPicture+=1,this.destroyChildren(),this.fieldPicture.destroyChildren(),i.moveXCurrentPosition=0,i.moveXPositions=[],i.moveYCurrentPosition=0,i.moveYPositions=[],i.positionsCards(),i.setMainPicture(),this.buttonContinue.addClass("hide"),this.buttonCheck.addClass("hide"),this.buttonAutofill.removeClass("hide"),this.fieldPicture=this.createFieldPicture(),this.buttonWrapper=new r({tagName:"div",className:"button-wrapper"},this.buttonContinue,this.buttonCheck,this.buttonAutofill),this.linePuzzles=this.createLinePuzzles(),this.hintLine=this.createLineHint(),this.headerPage=new C(this.changeHintTranslate,this.changeHintsBackground),this.generatePuzzles(),this.inputPuzzles(),this.appendChildren([this.headerPage,this.fieldPicture,this.hintLine,this.linePuzzles,this.buttonWrapper,new f])}autofillCards(){const t=this.fieldLines[i.currentIndexPhrase].getNode().children,e=this.gameLine?.getChildren();e&&e.map(n=>n.getChildren()[0].getNode()).sort((n,s)=>Number(n.getAttribute("data"))-Number(s.getAttribute("data"))).forEach((n,s)=>{t[s].setAttribute("style",`z-index: ${i.numWordsInPhrase(i.currentIndexPhrase)*10-10*s}; width: ${n.style.width}; height: ${n.style.height}`),t[s].setAttribute("border","none"),n.parentNode instanceof HTMLElement&&n.parentNode?.classList.add("show-empty-card"),t[s].classList.remove("empty-card"),t[s].append(n)}),this.checkRightPhrase(),this.buttonAutofill.addClass("hide")}}export{k as default};
