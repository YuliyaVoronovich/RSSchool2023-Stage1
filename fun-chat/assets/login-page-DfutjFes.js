import{B as s,s as p}from"./index-7wZzxcX5.js";import{I as o,u}from"./input-_uvESVI-.js";import{B as i,M as c,p as a}from"./modal-B3TRcKLn.js";const r="^[A-Z][\\-a-zA-z]{3,}$",n="^(?=.*[0-9])(?=.*[A-Z])[0-9a-zA-Z!@#$%^&*]{6,}$";class h extends s{constructor(t){super({tag:"form",className:"login-form needs-validation"}),this.onSubmit=t,this.node.action="",this.setAttribute("novalidate","novalidate"),this.login=new o({type:"text",className:"form-control form-input-name",name:"Name",placeholder:"Input name"}),this.login.setAttribute("required","required"),this.login.setAttribute("pattern",r),this.password=new o({type:"password",className:"form-control form-input-password",placeholder:"Input password"}),this.password.setAttribute("required","required"),this.password.setAttribute("pattern",n),this.appendChildren([this.login,this.messageErrorLogin,this.password,this.messageErrorPass,this.submit]),this.addListener("submit",e=>{if(this.addClass("was-validated"),e.preventDefault(),e.stopPropagation(),this.checkValidity()){const d=this.login.getValue(),m=this.password.getValue();this.onSubmit?.(d,m)}})}login;messageErrorLogin=new s({tag:"span",className:"invalid-feedback",textContent:"Length must be more than 4 characters"});password;messageErrorPass=new s({tag:"span",className:"invalid-feedback",textContent:"Length must be more than 6 characters and contain at least 1 uppercase letter and at least 1 number"});submit=new i({type:"submit",className:"btn btn-primary",textContent:"Login"});checkValidity(){return new RegExp(r).test(this.login.getValue())&&new RegExp(n).test(this.password.getValue())}}class f extends s{form;modal=new c;about=new i({type:"button",className:"btn btn-success",textContent:"About",onClick:()=>{window.location.href="#about"}});constructor(){super({tag:"div",className:"wrapper login-wrapper"}),this.form=new h(this.getFormData),this.appendChildren([this.form,this.about,this.modal]),a.subscribe("error",t=>{this.modal.alertMess(t.error,"danger")}),a.subscribe("connection",()=>{this.modal.closeModal()}),a.subscribe("userLoggedIn",t=>{t.isLogined&&this.navigate()})}getFormData=(t,e)=>{t&&e&&(u.login(t,e),p.setItem("user",{login:t,password:e}))};navigate=()=>{window.location.href="#chat"}}export{f as LoginPage};
