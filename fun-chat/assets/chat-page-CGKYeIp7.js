import{B as t,s as d}from"./index-1aKjkdhi.js";import{B as g,M as A,p as n}from"./modal-DhBxvNdV.js";import{I as x,s as u,u as l}from"./input-DICgFOkX.js";import{L as b}from"./link-BNfUDLsd.js";class L extends t{statusMsg;container=new t({tag:"div",className:"msg-container card"});constructor({id:e,text:s,from:a,datetime:i,status:r,onContext:h,onClick:c}){const M=d.getUser("user")?.login===a?"name-from":"name-to";super({tag:"div",className:`msg-wrapper ${M}`}),this.setAttribute("id",`${e}`);const C=new t({tag:"div",className:"msg-container-header"}),v=new t({tag:"div",className:"msg-text",textContent:`${s}`}),U=new t({tag:"div",className:"msg-date",textContent:`${this.setDate(i)}`}),f=d.getUser("user")?.login===a&&r.isDelivered?"Delivered":"";this.statusMsg=new t({tag:"div",className:"msg-status",textContent:`${f}`});const N=d.getUser("user")?.login===a?"You":a,S=new t({tag:"div",className:`msg-name ${M}`,textContent:`${N}`});C.appendChildren([S,U]),this.container.appendChildren([C,v,this.statusMsg]),this.appendChildren([this.container]),h&&this.container.addListener("contextmenu",y=>{y.preventDefault(),h(this,e,a)}),c&&this.container.addListener("click",()=>{c()})}setDate=e=>{const s=Intl.DateTimeFormat().resolvedOptions().timeZone,a=new Date(e);return new Intl.DateTimeFormat("ru-RU",{day:"2-digit",month:"2-digit",year:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit",timeZone:s}).format(a)};updateStatus=e=>{this.statusMsg.destroy();const s=e?"Delivered":"";this.statusMsg=new t({tag:"div",className:"msg-status",textContent:`${s}`}),this.container.appendChildren([this.statusMsg]),this.appendChildren([this.container])}}class I extends t{constructor(e){super({tag:"form",className:"message-form"}),this.onSubmit=e,this.node.action="",this.inputMessage=new x({type:"text",className:"form-control",placeholder:"Input yor message...",disabled:!0,onInput:this.changeStatusBtn}),this.btnMessage=new g({type:"submit",className:"btn btn-success disabled",textContent:"Enter"}),this.appendChildren([this.inputMessage,this.btnMessage]),this.addListener("submit",s=>{s.preventDefault();const a=this.inputMessage.getValue();this.onSubmit?.(a)})}inputMessage;btnMessage;changeInputStatus=()=>{this.inputMessage.removeAttribute("disabled")};resetInputMessage=()=>{this.inputMessage.setValue("")};changeStatusBtn=e=>{this.btnMessage.toggleClass("disabled",!e.trim())}}class H extends g{constructor(){super({type:"button",className:"btn btn-sm btn-outline-danger",textContent:"LOGOUT",onClick:()=>{d.deleteData("user"),window.location.href="/",window.history.pushState({},"","/")}})}}class F extends t{user;nameApp=new t({tag:"span",className:"app-title",textContent:"Fun Chat"});btnLogout=new H;constructor(){super({tag:"header",className:"header card"}),this.user=new t({tag:"span",className:"user-title",textContent:`You: ${d.getUser("user")?.login}`}),this.appendChildren([this.nameApp,this.user,this.btnLogout])}}class T extends t{constructor(){const e=new b({className:"author-link",textContent:"YuliyaVoronovich",href:"https://github.com/yuliyavoronovich",target:"_blank"}),s=new b({className:"author",href:"https://rs.school/courses/javascript-mentoring-program",target:"_blank"});s.setHTML("<img class='logo-img' src='./img/rs_school_js.svg'>");const a=new t({tag:"div",textContent:"2024"});super({tag:"footer",className:"header card"}),this.appendChildren([e,a,s])}}class D extends t{label;countMsg;currentUser;constructor(e,s,a,i){super({tag:"li",className:"user-item"}),this.currentUser={login:e,isLogined:s};const r=a||"",h=s?"-active":"-no-active";this.countMsg=new t({tag:"span",className:"badge text-bg-danger",textContent:`${r}`}),this.label=new t({tag:"div",className:`user-label status status${h}`,textContent:`${e}`}),this.label.appendChildren([this.countMsg]),i&&this.addListener("click",()=>{i(this.currentUser)}),this.appendChildren([this.label])}}const m="222";class E{sendMsg(e,s){u.sendMsg(m,e,s).catch(()=>{})}getHistoryMsg(e){u.getHistoryMsg(m,e).catch(()=>{})}deleteMsg(e){u.deleteMsg(m,e).catch(()=>{})}}const p=new E;class w extends t{constructor(e,s,a){super({tag:"div",className:"context-menu card"});const i=new g({type:"button",className:"context-menu-link",textContent:"Edit",onClick:()=>{console.log(e),s(e)}}),r=new g({type:"button",className:"context-menu-link",textContent:"Delete",onClick:()=>{a(e)}});this.appendChildren([i,r])}}const $=40;class O extends t{currentUser=d.getUser("user")?.login;isSelectedUser=!1;selectedUser="";userItems=[];header=new F;footer=new T;main=new t({tag:"main",className:"main"});search;aside=new t({tag:"aside",className:"aside card"});usersWrapper=new t({tag:"ul",className:"users-link"});chat=new t({tag:"div",className:"chat card"});chatHeader=new t({tag:"div",className:"chat-header"});chatHeaderStatus=new t({tag:"span",className:"status-in-chat"});chatFooter=new t({tag:"div",className:"chat-footer"});messageForm;userMessages=[];countUnReadMessages=[];chatMainPlaceholder=new t({tag:"div",className:"chat-main-placeholder",textContent:"Select a user to send a message..."});chatMain=new t({tag:"div",className:"chat-main"});isStartChat=!1;usersActive=[];usersInActive=[];modal=new A;newContext;constructor(){super({tag:"div",className:"chat-wrapper"}),this.search=new x({type:"text",className:"form-control",placeholder:"Search...",onInput:this.searchUser}),this.messageForm=new I(this.getTextMessage),this.chatFooter.appendChildren([this.messageForm]),this.chatHeader.appendChildren([this.chatHeaderStatus]),this.chatMain.appendChildren([this.chatMainPlaceholder]),this.chatMain.addListener("click",this.destroyMenuMsg),this.chat.appendChildren([this.chatHeader,this.chatMain,this.chatFooter]),this.aside.appendChildren([this.search,this.usersWrapper]),this.main.appendChildren([this.aside,this.chat]),this.appendChildren([this.header,this.main,this.footer,this.modal]),this.newContext=new w("0",this.editMsg,this.deleteMsg),l.reLogin(),l.allActiveUsers(),l.allInActiveUsers(),this.subscribesUsers(),this.subscribesMessages(),n.subscribe("error",e=>{console.log(e),this.modal.alertMess(e.error,"danger")}),n.subscribe("connection",e=>{console.log(e),this.modal.closeModal()})}subscribesUsers=()=>{n.subscribe("usersActive",e=>{this.usersActive=[],e.users.forEach(s=>{s.login!==this.currentUser&&(this.usersActive.push(s),this.getHistoryFromUser(s.login))}),this.showUsers(this.usersActive)}),n.subscribe("usersInActive",e=>{this.usersInActive=[],e.users.forEach(s=>{this.usersInActive.push(s),this.getHistoryFromUser(s.login)}),this.showUsers(this.usersInActive)}),n.subscribe("userExternalLogin",e=>{this.updateUsersAfterExternalLogin(e)}),n.subscribe("userExternalLogout",e=>{this.updateUsersAfterExternalLogin(e)})};subscribesMessages=()=>{n.subscribe("messageReceived",e=>{const{to:s,from:a}=e;if(this.currentUser===a||this.currentUser===s&&this.selectedUser===a){const i=this.addNewMessage(e);this.isStartChat||(this.chatMainPlaceholder.addClass("hide"),this.isStartChat=!0),this.userMessages.push(i),this.chatMain.appendChildren([i]),this.chatMain.setScrollTop()}else this.getHistoryFromUser(a)}),n.subscribe("messageHistory",e=>{this.isSelectedUser&&e.messages.length>0?(this.chatMain.destroyChildren(),this.userMessages=e.messages.map(s=>this.addNewMessage(s)),this.chatMain.appendChildren([...this.userMessages]),this.chatMain.setScrollTop()):(this.countUnReadMessages.push(e.messages.filter(s=>s.to===this.currentUser).filter(s=>!s.status.isReaded).length),this.usersWrapper.destroyChildren(),this.showUsers([...this.usersActive,...this.usersInActive]))}),n.subscribe("messageDeliver",e=>{this.userMessages.forEach(s=>{s.getAttribute("id")===e.message.id&&s.updateStatus(e.message.isDelivered)})}),n.subscribe("messageDelete",e=>{this.userMessages.forEach(s=>{s.getAttribute("id")===e.message.id&&(s.destroy(),this.newContext.destroy())})})};updateUsersAfterExternalLogin=e=>{this.usersWrapper.destroyChildren(),l.allActiveUsers(),l.allInActiveUsers(),this.changeStatusOfSelectedUser(e)};showUsers=e=>{this.userItems=e.map((s,a)=>new D(s.login,s.isLogined,this.countUnReadMessages[a],this.getUser)),this.usersWrapper.appendChildren([...this.userItems])};searchUser=e=>{const s=[...this.usersActive,...this.usersInActive].filter(a=>a.login.toLowerCase().includes(e.toLowerCase()));this.usersWrapper.destroyChildren(),this.showUsers(s)};getUser=e=>{this.isSelectedUser=!0,this.selectedUser=e.login;const s=e.isLogined?"online":"offline";this.chatHeaderStatus.toggleClass("active",e.isLogined),this.chatHeaderStatus.setTextContent(`${s}`),this.chatHeader.setTextContent(`${e.login}`),this.chatMainPlaceholder.setTextContent("Write your first message..."),this.chatHeader.appendChildren([this.chatHeaderStatus]),this.messageForm.changeInputStatus(),this.getHistoryFromUser(e.login)};changeStatusOfSelectedUser=e=>{if(this.isSelectedUser){const s=e.isLogined?"online":"offline";this.chatHeaderStatus.toggleClass("active",e.isLogined),this.chatHeaderStatus.setTextContent(`${s}`)}};addNewMessage=e=>{const{id:s,text:a,to:i,from:r,datetime:h,status:c}=e;return new L({id:s,text:a,from:r,to:i,datetime:h,status:{isDelivered:c.isDelivered,isEdited:c.isEdited,isReaded:c.isReaded},onContext:this.contextMenuMsg,onClick:this.destroyMenuMsg})};getTextMessage=e=>{this.isStartChat||(this.chatMainPlaceholder.addClass("hide"),this.isStartChat=!0),p.sendMsg(e,this.selectedUser),this.messageForm.resetInputMessage(),this.messageForm.changeStatusBtn("")};getHistoryFromUser=e=>{p.getHistoryMsg(e)};contextMenuMsg=(e,s,a)=>{if(a===this.currentUser){this.newContext.destroy();const i=new w(s,this.editMsg,this.deleteMsg);this.newContext=i,this.chatMain.appendChildren([this.newContext]);const r=Number(e.getNodeProperty("offsetTop"));this.newContext.setStyle("top",`${r+$}px`)}};destroyMenuMsg=()=>{this.newContext.destroy()};editMsg=e=>{console.log(e)};deleteMsg=e=>{p.deleteMsg(e)}}export{O as ChatPage};
